{"version":3,"sources":["reportWebVitals.js","contexts/ThemeContext.js","hoc/withLoading.js","components/tab-body-container.js","List.js","components/button.js","components/modal.js","components/FormModal.js","Hint.js","Form.js","Header.js","App.js","const/languages.js","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","THEMES","light","color","backgroundColor","dark","ThemeContext","React","createContext","LoadDiv","styled","div","theme","Container","TabBodyContainer","children","title","ListItem","List","langs","map","lang","index","Button","button","modalRoot","document","getElementById","Modal","props","ReactDOM","createPortal","ButtonWrapper","FormModal","confirm","cancel","useContext","onClick","HintContainer","HintInner","PopupContainer","Hint","useState","showPopup","setShowPopup","ref","useRef","useEffect","current","focus","onBlur","tabIndex","Label","label","Input","input","ButtonContainer","FormButton","Form","onAddLang","text","setText","showModal","setShowModal","onSubmit","event","preventDefault","type","value","onChange","e","target","header","HeaderUl","ul","HeaderLi","li","focused","HeaderButton","Header","tab","setTab","toggleTheme","App","WrappedComponent","fetchData","LANGUAGES","AppComponent","data","setLangs","Promise","resolve","setTimeout","setData","fetch","a","Loading","AppContainer","setTheme","Provider","render","StrictMode"],"mappings":"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","file":"static/js/main.ac56fb10.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport const THEMES = {\n  light: {\n    color: 'black',\n    backgroundColor: 'white'\n  },\n  dark: {\n    color: 'white',\n    backgroundColor: '#222222'\n  }\n}\n\nexport const ThemeContext = React.createContext([THEMES.dark, () => {}]);\n","import styled from 'styled-components';\nimport { useEffect, useState, useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nconst LoadDiv = styled.div`\n  height: 100%;\n  padding: 36px;\n  color: ${({ theme }) => theme.color};\n  background-color: ${({ theme }) => theme.backgroundColor};\n`\n\nexport const withLoading = (WrappedComponent, fetchData) => {\n  return () => {\n    const [data, setData] = useState(null);\n    const [theme] = useContext(ThemeContext);\n\n    // mount時のみfetch\n    useEffect(() => {\n      fetch();\n    }, [])\n\n    // データロードメソッド\n    const fetch = async ()  => {\n      const data = await fetchData();\n      setData(data);\n    }\n\n    const Loading = (\n      <LoadDiv theme={theme}>ロード中...</LoadDiv>\n    )\n\n    // dataがなければロード中を表示\n    return data ? <WrappedComponent data={data} /> : Loading;\n  }\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 12px 64px;\n`\n\nexport const TabBodyContainer = ({ children, title }) => {\n  return (\n    <Container>\n      <h4>{ title }</h4>\n      { children }\n    </Container>\n  )\n}\n","import styled from 'styled-components';\nimport { TabBodyContainer } from './components/tab-body-container';\n\nconst ListItem = styled.div`\n  padding: 8px 16px;\n\n  &:nth-child(n+2) {\n    border-top: 1px solid #D9DBDE;\n  }\n`\n\nexport const List = ({ langs }) => {\n  return (\n    <TabBodyContainer title=\"取り扱い言語リスト\">\n      <div>\n        {\n          langs.map((lang, index) => {\n            return <ListItem key={index}>{lang}</ListItem>\n          })\n        }\n      </div>\n    </TabBodyContainer>\n  )\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 3px;\n  background-color: #2196F3;\n  padding: 8px 16px;\n  min-width: 100px;\n  font-size: 14px;\n  font-weight: bold;\n  color: white;\n  cursor: pointer;\n`\n","import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, .5);\n`\n\nexport const Modal = (props) => {\n  return ReactDOM.createPortal(\n    <Container>\n      { props.children }\n    </Container>,\n    modalRoot\n  )\n}\n","import styled from 'styled-components';\nimport { Modal } from './modal';\nimport { Button } from './button';\nimport { useContext } from 'react';\nimport { ThemeContext, THEMES } from '../contexts/ThemeContext';\n\nconst Container = styled.div`\n  width: 240px;\n  border-radius: 10px;\n  padding: 24px 36px;\n  color: ${({ theme }) => theme.color};\n  background-color: ${({ theme }) => theme.backgroundColor};\n  border: ${({ theme }) => theme === THEMES.dark ? '2px solid white' : 'none'}\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 24px;\n`\n\nexport const FormModal = ({confirm, cancel}) => {\n  const [theme] = useContext(ThemeContext);\n\n  return (\n    <Modal>\n      <Container theme={theme}>\n        <div>本当に作成しますか？</div>\n        <ButtonWrapper>\n          <Button onClick={cancel}>Cancel</Button>\n          <Button onClick={confirm}>OK</Button>\n        </ButtonWrapper>\n      </Container>\n    </Modal>\n  )\n}\n","import styled from 'styled-components';\nimport { useState, useRef, useEffect } from 'react';\n\nconst HintContainer = styled.div`\n  position: relative;\n  display: inline-flex;\n  margin-left: 12px;\n`\n\nconst HintInner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: 1px solid #757575;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`\n\nconst PopupContainer = styled.div`\n  position: absolute;\n  left: 88%;\n  bottom: 12px;\n  display: flex;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 8px;\n  padding: 8px;\n  width: 140px;\n`\n\nexport const Hint = () => {\n  const [showPopup, setShowPopup] = useState(false);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (ref.current) ref.current.focus();\n  })\n\n  return (\n    <HintContainer>\n      <HintInner onClick={() => setShowPopup(true)}>\n        ?\n      </HintInner>\n      {\n        showPopup && (\n          <PopupContainer\n            onBlur={() => setShowPopup(false)}\n            tabIndex={0}\n            ref={ref}\n          >\n            言語の名前です\n          </PopupContainer>\n        )\n      }\n    </HintContainer>\n  )\n}\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { Button } from './components/button';\nimport { TabBodyContainer } from './components/tab-body-container';\nimport { FormModal } from './components/FormModal';\nimport { Hint } from './Hint';\n\nconst Label = styled.label`\n  display: flex;\n  color: #757575;\n  font-size: 14px;\n  font-weight: bold;\n`\n\nconst Input = styled.input`\n  border-radius: 3px;\n  padding: 4px 8px;\n  border: 1px solid black;\n`\n\nconst ButtonContainer = styled.div`\n  margin-top: 24px;\n`\n\nconst FormButton = styled(Button)`\n  width: 120px;\n`\n\nexport const Form = ({ onAddLang }) => {\n  const [text, setText]= useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    setShowModal(true);\n  }\n\n  return (\n    <TabBodyContainer title=\"新しい言語の追加\">\n      <form onSubmit={submitForm}>\n        <div>\n          <Label>言語</Label>\n          <Input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <Hint />\n        </div>\n        <ButtonContainer>\n          <FormButton>追加</FormButton>\n        </ButtonContainer>\n      </form>\n      {\n        showModal &&\n        <FormModal\n          confirm={() => onAddLang(text)}\n          cancel={() => setShowModal(false)}\n        />\n      }\n    </TabBodyContainer>\n  )\n}\n","import styled from 'styled-components';\nimport { useContext } from 'react';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { Button } from './components/button';\n\nconst Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 64px 0;\n  border-bottom: 1px solid #E0E0E0;\n`\n\nconst HeaderUl = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`\nconst HeaderLi = styled.li`\n  list-style: none;\n  padding: 4px 12px;\n  cursor: pointer;\n  border-bottom: ${props => props.focused ? '2px solid #F44336' : 'none'};\n`\n\nconst HeaderButton = styled(Button)`\n  padding: 0;\n  margin-bottom: 4px;\n`\n\nexport const Header = ({ tab, setTab }) => {\n  const [theme, toggleTheme] = useContext(ThemeContext);\n\n  return (\n    <Container>\n      <HeaderUl>\n        <HeaderLi focused={tab === 'list'} onClick={() => setTab('list')}>リスト</HeaderLi>\n        <HeaderLi focused={tab === 'form'} onClick={() => setTab('form')}>フォーム</HeaderLi>\n      </HeaderUl>\n      <HeaderButton onClick={toggleTheme}>テーマ変更</HeaderButton>\n    </Container>\n  )\n}\n","import { useState, useContext } from 'react';\nimport { List } from \"./List\";\nimport { Form } from \"./Form\";\nimport { Header } from './Header';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100%;\n  color: ${({ theme }) => theme.color};\n  background-color: ${({ theme }) => theme.backgroundColor};\n`\n\nfunction App({ data }) {\n  const [tab, setTab] = useState('list');\n  const [langs, setLangs] = useState(data);\n  const [theme] = useContext(ThemeContext);\n\n  // 言語セット\n  const addLang = (lang) => {\n    setLangs([...langs, lang]);\n    setTab('list');\n  }\n\n  return (\n    <Container theme={theme}>\n      <Header tab={tab} setTab={setTab} />\n      {\n        tab === 'list' ? <List langs={langs} /> : <Form onAddLang={addLang} />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","export const LANGUAGES = [\n  'JavaScirpt',\n  'PHP',\n  'Ruby'\n];\n\nexport const getLanguages = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(LANGUAGES);\n    }, 1000)\n  })\n}\n","import { useState } from 'react';\nimport { ThemeContext, THEMES } from './contexts/ThemeContext';\nimport { withLoading } from './hoc/withLoading';\nimport App from './App';\nimport { getLanguages } from './const/languages';\n\nconst AppComponent = withLoading(App, getLanguages);\n\n\nexport const AppContainer = () => {\n  const [theme, setTheme] = useState (THEMES.dark);\n\n  const toggleTheme = () => {\n    const nextTheme = (theme === THEMES.dark) ? THEMES.light : THEMES.dark;\n    setTheme(nextTheme);\n  }\n\n  return (\n    <ThemeContext.Provider value={[theme, toggleTheme]}>\n      <AppComponent />\n    </ThemeContext.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { AppContainer } from './AppContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}